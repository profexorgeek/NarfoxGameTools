<?xml version="1.0" encoding="utf-8"?>
<ComponentSave xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>CommonComponents/DamageNumber</Name>
  <BaseType>Container</BaseType>
  <State>
    <Name>Default</Name>
    <Variable>
      <Type>AnimationCategoryState</Type>
      <Name>AnimationCategoryState</Name>
      <SetsValue>false</SetsValue>
    </Variable>
    <Variable>
      <Type>DamageCategoryState</Type>
      <Name>DamageCategoryState</Name>
      <SetsValue>false</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>DamageText.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">White</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>DamageText.Font Scale</Name>
      <Value xsi:type="xsd:float">0.5</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>DamageText.Height</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>DamageText.Height Units</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>HorizontalAlignment</Type>
      <Name>DamageText.HorizontalAlignment</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>SizeCategoryState</Type>
      <Name>DamageText.SizeCategoryState</Name>
      <Value xsi:type="xsd:string">Large</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>DamageText.Text</Name>
      <Value xsi:type="xsd:string">9,999,999</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>DamageText.VerticalAlignment</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>DamageText.Width</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>DamageText.Width Units</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>HorizontalAlignment</Type>
      <Name>DamageText.X Origin</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>DamageText.X Units</Name>
      <Value xsi:type="xsd:int">6</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>DamageText.Y Origin</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>DamageText.Y Units</Name>
      <Value xsi:type="xsd:int">7</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Height</Name>
      <Value xsi:type="xsd:float">10</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>IsXamarinFormsControl</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>State</Type>
      <Name>State</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Width</Name>
      <Value xsi:type="xsd:float">75</Value>
      <SetsValue>true</SetsValue>
    </Variable>
  </State>
  <Category>
    <Name>DamageCategory</Name>
    <State>
      <Name>Normal</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>DamageText.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">White</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Critical</Name>
      <Variable>
        <Type>ColorCategory</Type>
        <Name>DamageText.ColorCategoryState</Name>
        <Value xsi:type="xsd:string">Yellow</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
  </Category>
  <Category>
    <Name>AnimationCategory</Name>
    <State>
      <Name>Small</Name>
      <Variable>
        <Type>int</Type>
        <Name>DamageText.Alpha</Name>
        <Value xsi:type="xsd:int">255</Value>
        <Category>Rendering</Category>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.Font Scale</Name>
        <Value xsi:type="xsd:float">0.75</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.X</Name>
        <Value xsi:type="xsd:float">0</Value>
        <Category>Position</Category>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.Y</Name>
        <Value xsi:type="xsd:float">0</Value>
        <Category>Position</Category>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>Large</Name>
      <Variable>
        <Type>int</Type>
        <Name>DamageText.Alpha</Name>
        <Value xsi:type="xsd:int">0</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.Font Scale</Name>
        <Value xsi:type="xsd:float">1</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.X</Name>
        <Value xsi:type="xsd:float">0</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>float</Type>
        <Name>DamageText.Y</Name>
        <Value xsi:type="xsd:float">-72</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
  </Category>
  <Instance>
    <Name>DamageText</Name>
    <BaseType>Text</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Behaviors />
</ComponentSave>